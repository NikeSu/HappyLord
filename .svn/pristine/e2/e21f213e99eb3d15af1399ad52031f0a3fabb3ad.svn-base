using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class GameController : MonoBehaviour
{
    public Card M_card;

    public UISprite ZHUPAI;
    public UISprite TwoPAI;
    public UISprite TherePai;
    private bool Xuanze;









    /// <summary>
    /// 把扑克分成4类，P1，P2,P3,底牌
    /// </summary>
    public List<string> cardlist = new List<string>();
    public List<string> player1Cards;
    public List<string> player2Cards;
    public List<string> player3Cards;

    public List<string> dipai;
  



    // Use this for initialization
    void Start()
    {

        InitCardList();
        FaPai();
        OnClick();


        CreateCards();


    }
    public bool Select
    {
        set { Xuanze = value; }
        get { return Xuanze; }
    }
    public void OnClick()
    {
        if (cardlist.Count == player1Cards.Count)
        {
            if (Xuanze)
            {
                transform.localPosition -= Vector3.up * 10;
                Xuanze = false;
            }
            else
            {
                transform.localPosition += Vector3.up * 10;
                Xuanze = true;

            }
        }

    }
            /// <summary>
            /// 利用集和来解决牌的归属问题
            /// </summary>
            public void FaPai()
    {

        dipai = new List<string>();
        string d1 = cardlist[cardlist.Count - 3];
        string d2 = cardlist[cardlist.Count - 2];
        string d3 = cardlist[cardlist.Count - 1];
        dipai.Add(d1);
        dipai.Add(d2);
        dipai.Add(d3);
        cardlist.RemoveRange(cardlist.Count - 3, 3);

        player1Cards = new List<string>();
        player2Cards = new List<string>();
        player3Cards = new List<string>();
        for (int i = 0; i < cardlist.Count; i += 3)
        {
            player1Cards.Add(cardlist[i]);
            player2Cards.Add(cardlist[i + 1]);
            player3Cards.Add(cardlist[i + 2]);
        }

    }

    /// <summary>
    ///创建一副牌
    /// </summary>

    private void InitCardList()
    {
        cardlist = new List<string>();
        for (int i = 0; i < 4; i++)
        {
            for (int j = 1; j <= 13; j++)
            {
                if (j == 10)
                {
                    cardlist.Add(i + "A");
                }
                else if (j == 11)
                {
                    cardlist.Add(i + "B");
                }
                else if (j == 12)
                {
                    cardlist.Add(i + "C");
                }
                else if (j == 13)
                {
                    cardlist.Add(i + "D");
                }
                else
                {
                    cardlist.Add(i + "" + j);
                }

            }

        }
        cardlist.Add("41");
        cardlist.Add("51");

        ///利用位置转换来起到打乱牌的效果
        for (int i = 0; i < cardlist.Count; i++)
        {
            string v = cardlist[i];
            int id = UnityEngine.Random.Range(0, cardlist.Count);
            cardlist[i] = cardlist[id];
            cardlist[id] = v;
        }

    }

    /// <summary>
    /// 创建玩家1的手牌
    /// </summary>
    public void CreateCards()
    {
        //预先排

        List<Card> cards = new List<Card>();

        for (int i = player1Cards.Count - 1; i >= 0; i--)
        {
            Card go = Instantiate(M_card);
            go.Value = player1Cards[i];
            Debug.Log(go.Color + "," + go.Number);
            go.transform.SetParent(GameObject.Find("CardParent").transform);
            go.transform.localScale = Vector3.one;
            go.gameObject.SetActive(false);
            cards.Add(go);
        }
        cards.Sort();

        for (int i = 0; i < cards.Count; i++)
        {
            Card go = cards[i];
            
            go.GetComponent<UIPanel>().depth = i + cards.Count;
            go.transform.localPosition = new Vector3(55 * i, go.transform.parent.position.y, go.transform.parent.position.z);
            go.gameObject.SetActive(true);
            if (Input.GetMouseButtonDown(0))
            {
                go.transform.localPosition += Vector3.up * 10;
            }
            else
            {
                go.transform.localPosition -= Vector3.up * 10;
            }
        }
    

    
            }
        }



















